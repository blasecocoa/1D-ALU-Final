/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module generator_3 (
    input clk,
    input rst,
    output reg [15:0] a,
    output reg [15:0] b,
    output reg [7:0] alufn,
    output reg [4:0] testcase
  );
  
  
  
  reg [29:0] M_counter_d, M_counter_q = 1'h0;
  
  always @* begin
    M_counter_d = M_counter_q;
    
    
    case (M_counter_q[25+4-:5])
      5'h01: begin
        testcase = 1'h1;
        a = 3'h4;
        b = 3'h2;
        alufn = 8'h00;
      end
      5'h02: begin
        testcase = 2'h2;
        a = 16'hffff;
        b = 4'h5;
        alufn = 8'h03;
      end
      5'h03: begin
        testcase = 2'h3;
        a = 3'h4;
        b = 3'h2;
        alufn = 8'h01;
      end
      5'h04: begin
        testcase = 3'h4;
        a = 16'hffff;
        b = 16'hffff;
        alufn = 8'h03;
      end
      5'h05: begin
        testcase = 3'h5;
        a = 3'h4;
        b = 3'h2;
        alufn = 8'h02;
      end
      5'h06: begin
        testcase = 3'h6;
        a = 5'h03;
        b = 5'h04;
        alufn = 8'h02;
      end
      5'h07: begin
        testcase = 3'h7;
        a = 3'h5;
        b = 3'h5;
        alufn = 8'h33;
      end
      5'h08: begin
        testcase = 4'h8;
        a = 3'h4;
        b = 3'h2;
        alufn = 8'h33;
      end
      5'h09: begin
        testcase = 4'h9;
        a = 3'h2;
        b = 3'h4;
        alufn = 8'h35;
      end
      5'h0a: begin
        testcase = 4'ha;
        a = 3'h4;
        b = 3'h2;
        alufn = 8'h35;
      end
      5'h0b: begin
        testcase = 4'hb;
        a = 3'h2;
        b = 3'h4;
        alufn = 8'h37;
      end
      5'h0c: begin
        testcase = 4'hc;
        a = 3'h4;
        b = 3'h2;
        alufn = 8'h37;
      end
      5'h0d: begin
        testcase = 4'hd;
        a = 3'h2;
        b = 3'h4;
        alufn = 8'h18;
      end
      5'h0e: begin
        testcase = 4'he;
        a = 3'h2;
        b = 3'h4;
        alufn = 8'h1e;
      end
      5'h0f: begin
        testcase = 4'hf;
        a = 3'h2;
        b = 3'h4;
        alufn = 8'h16;
      end
      5'h10: begin
        testcase = 5'h10;
        a = 3'h2;
        b = 3'h4;
        alufn = 8'h1a;
      end
      5'h11: begin
        testcase = 5'h11;
        a = 3'h7;
        b = 3'h5;
        alufn = 8'h20;
      end
      5'h12: begin
        testcase = 5'h12;
        a = 3'h4;
        b = 3'h2;
        alufn = 8'h21;
      end
      5'h13: begin
        testcase = 5'h13;
        a = 3'h4;
        b = 3'h2;
        alufn = 8'h23;
      end
      5'h14: begin
        testcase = 5'h14;
        a = 3'h5;
        b = 3'h7;
        alufn = 8'h18;
      end
      5'h15: begin
        testcase = 5'h15;
        a = 3'h5;
        b = 3'h7;
        alufn = 8'h1d;
      end
      5'h16: begin
        testcase = 5'h16;
        a = 3'h5;
        b = 3'h7;
        alufn = 8'h13;
      end
      default: begin
        testcase = 1'h0;
        a = 1'h0;
        b = 1'h0;
        alufn = 1'h0;
      end
    endcase
    if (M_counter_q[25+4-:5] <= 6'h19) begin
      M_counter_d = M_counter_q + 1'h1;
    end else begin
      M_counter_d = 1'h1;
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_counter_q <= 1'h0;
    end else begin
      M_counter_q <= M_counter_d;
    end
  end
  
endmodule
