/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module alu_4 (
    input [15:0] a,
    input [15:0] b,
    input [7:0] alufn,
    output reg [15:0] out
  );
  
  
  
  wire [16-1:0] M_add_out;
  reg [16-1:0] M_add_a;
  reg [16-1:0] M_add_b;
  reg [6-1:0] M_add_alufn;
  add_5 add (
    .a(M_add_a),
    .b(M_add_b),
    .alufn(M_add_alufn),
    .out(M_add_out)
  );
  
  wire [16-1:0] M_boole_out;
  reg [16-1:0] M_boole_a;
  reg [16-1:0] M_boole_b;
  reg [6-1:0] M_boole_alufn;
  boole_6 boole (
    .a(M_boole_a),
    .b(M_boole_b),
    .alufn(M_boole_alufn),
    .out(M_boole_out)
  );
  
  wire [16-1:0] M_shift_out;
  reg [16-1:0] M_shift_a;
  reg [16-1:0] M_shift_b;
  reg [6-1:0] M_shift_alufn;
  shift_7 shift (
    .a(M_shift_a),
    .b(M_shift_b),
    .alufn(M_shift_alufn),
    .out(M_shift_out)
  );
  
  wire [16-1:0] M_cmp_out;
  reg [16-1:0] M_cmp_a;
  reg [16-1:0] M_cmp_b;
  reg [6-1:0] M_cmp_alufn;
  cmp_8 cmp (
    .a(M_cmp_a),
    .b(M_cmp_b),
    .alufn(M_cmp_alufn),
    .out(M_cmp_out)
  );
  
  always @* begin
    M_add_a = a;
    M_add_b = b;
    M_add_alufn = alufn[0+5-:6];
    M_boole_a = a;
    M_boole_b = b;
    M_boole_alufn = alufn[0+5-:6];
    M_shift_a = a;
    M_shift_b = b;
    M_shift_alufn = alufn[0+5-:6];
    M_cmp_a = a;
    M_cmp_b = b;
    M_cmp_alufn = alufn[0+5-:6];
    
    case (alufn[4+1-:2])
      2'h0: begin
        out = M_add_out;
      end
      2'h1: begin
        out = M_boole_out;
      end
      2'h2: begin
        out = M_shift_out;
      end
      default: begin
        out = M_cmp_out;
      end
    endcase
  end
endmodule
